{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww23160\viewh13160\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 KeepNoteS Whitepaper (Synopsis/Use/Etc) - B. Greg Colburn Jr. (2018)\
\
\
KeepNoteS (Short for KeepNoteSecure) uses a AES128 CBC method to encrypt and decrypt a simplistic text based file. This method is intended to create a small file that may contain pertenant\
text based data such as passphrases, specific IP data, infrastructure content, or other small notes. The encryption method uses a passphrase+PIN combination  fed to SHA256 hashing to\
help isolate potential brute force attempts. The passphrase is passed through a SHA256 hash and then picked apart to create the 128bit key. The Pin is used as a multiplier to the SHA256\
iteration method. The iteration PIN is multiplied by a fractional value and added to a prime number to create the number of iterations for the hash sequence. The ideology of the pin is to\
help create the depth of hash iterations unique to the user. As with any encryption method, the disclosure of the PIN and Passphrase, along with the source code prime number makes it \
easy to decipher, but this is also true with any other method of encryption. \
\
Typing information into the main text area is to be done in plain text only but you can potentially enter plaintext UTF-8 or Base64 data that may already be encrypted. Consider it your vanilla text \
editor in terms of use, no formatting is done with the data, it\'92s essentially a wysiwyg text format. To save the file, hit the save button after entering your text into the main area and you will \
be prompted with a location and file name. It is strongly encouraged to simply use a [filename].txt format for simplicity (i.e. MyFile.txt). \
\
To decipher the file at a later time enter your passphrase and pin number into the program FIRST and then select your file. The editor will decipher your previously\
saved text file by reading the file and deciphering the data. The data will be deciphered \'93on the fly\'94 as it is displayed/appended into the text area. You can appaend\
the data and resave the file again under either the same filename or a new file name. \
\
Caveats & Precautions: Encryption and Decryption should ALWAYS be handled on a computer you trust one-million-percent as being safe if the information is \
critical to a system, use, or other reasons \'97 key loggers are a potential threat! There is also a margin of probability that a memory exploit can expose the data. \
\
The file is NEVER decrypted itself, it remains as an encrypted text file (not data). It is only deciphered when the proper passphrase and PIN is provided! If you\
are not changing any information in the file you are opening, there is no need to re-save the file.\
\
NOTE: PIN must be between 1000 and 99999, this is an arbitrary number and can be modified through the source code. I also used a fractional multiplier\
applied to the PIN as well as an arbitrary prime number. This can all be changed as needed in the source code.\
\
NOTE: Passphrase can cantain ANY plaintext UTF-8 charactors.\
\
You may use this source code for any purpose granted you always identify the originating source both in source code and with a thanks or citation in the final\
product if the source code is not released with the working copy. Donations to my coffee, snacks, and encouragement fund are always welcomed:\
\
https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=NZ5MHFDKKVFFN\
\
Thank you\'85 and code on!}